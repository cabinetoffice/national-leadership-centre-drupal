version: '3'

services:
  mariadb:
    image: wodby/mariadb:$MARIADB_TAG
    container_name: "${PROJECT_NAME}_mariadb"
    stop_grace_period: 30s
    environment:
      # See all available mariadb variables at https://github.com/wodby/mariadb.
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASSWORD
    volumes:
      - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
      - project-db-data:/var/lib/mysql # I want to manage volumes manually.
    networks:
      - nlc_cms

  php:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_php"
    environment:
      # See all available PHP variables at https://github.com/wodby/drupal-php.
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      DB_HOST: $DB_HOST
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_DRIVER: $DB_DRIVER
      PHP_TIMEZONE: Europe/London
      PHP_IDE_CONFIG: "serverName=drupal"       # Needed for xdebug for drush commands.
      PHP_XDEBUG: 1
      PHP_XDEBUG_DEFAULT_ENABLE: 1
      PHP_XDEBUG_REMOTE_CONNECT_BACK: 1         # This is needed to respect remote.host setting bellow
      PHP_XDEBUG_REMOTE_HOST: host.docker.internal # Docker 18.03+ Mac/Win
      SALESFORCE_PEM_PATH: $SALESFORCE_PEM_PATH
      SALESFORCE_KEY: $SALESFORCE_KEY
      SALESFORCE_URL: $SALESFORCE_URL
      SALESFORCE_LOGIN: $SALESFORCE_LOGIN
      SIMPLETEST_BASE_URL: $SIMPLETEST_BASE_URL
      SIMPLETEST_DB: $SIMPLETEST_DB
      ELASTICSEARCH_URL: $ELASTICSEARCH_URL
    volumes:
      # - ./:/var/www/html
      # For macOS users (https://wodby.com/stacks/drupal/docs/local/docker-for-mac/)
      - ./:/var/www/html:cached # User-guided caching
      # - docker-sync:/var/www/html # Docker-sync
    networks:
      - nlc_cms
      - graph

  nginx:
    image: wodby/drupal-nginx:$NGINX_TAG
    container_name: "${PROJECT_NAME}_nginx"
    depends_on:
      - php
    environment:
      # See all available NGINX variables at https://github.com/wodby/drupal-nginx.
      NGINX_STATIC_CONTENT_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: "${NGINX_SERVER_ROOT}"
      # NGINX_DRUPAL_FILE_PROXY_URL: http://example.com
    volumes:
      # - ./:/var/www/html
      # For macOS users (https://wodby.com/stacks/drupal/docs/local/docker-for-mac/)
      - ./:/var/www/html:cached # User-guided caching
      # - docker-sync:/var/www/html # Docker-sync
    labels:
      - 'traefik.backend=nginx'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:${PROJECT_BASE_URL}'
#      - 'traefik.docker.network=traefik'
    networks:
      - nlc_cms

  neo4j:
    image: convivio/neo4j:$NEO4J_TAG
    container_name: "${PROJECT_NAME}_neo4j"
    volumes:
      - graph-data:/data
      - graph-logs:/logs
      - ./graph/import:/import
    ports:
      - '7474:7474'
      # - '7473:7473'
      - '7687:7687'
    environment:
      - NEO4J_AUTH=neo4j/$NEO4J_PASSWORD
      - NEO4J_HOST=$NEO4J_HOST
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,graphql.*,algo.*
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_dbms_unmanaged__extension__classes=org.neo4j.graphql=/graphql,semantics.extension=/rdf
      # - NEO4J_BOLT_PORT_NUMBER=$NEO4J_BOLT_PORT_NUMBER
      # - NEO4J_HTTP_PORT_NUMBER=$NEO4J_HTTP_PORT_NUMBER
      # - NEO4J_HTTPS_PORT_NUMBER=$NEO4J_HTTPS_PORT_NUMBER
    labels:
      - 'traefik.backend=neo4j'
      - 'traefik.port=${NEO4J_HTTP_PORT_NUMBER}'
      - 'traefik.frontend.rule=Host:graph.${PROJECT_BASE_URL}'
#      - 'traefik.docker.network=traefik'
    networks:
      - graph
      - nlc_cms

  redis:
    image: wodby/redis:$REDIS_TAG
    container_name: "${PROJECT_NAME}_redis"
    networks:
      - nlc_cms

  memcached:
    image: wodby/memcached:$MEMCACHED_TAG
    container_name: "${PROJECT_NAME}_memcached"
    networks:
      - nlc_cms

  mailhog:
    image: mailhog/mailhog
    container_name: "${PROJECT_NAME}_mailhog"
    labels:
      - 'traefik.backend=${PROJECT_NAME}_mailhog'
      - 'traefik.port=8025'
      - 'traefik.frontend.rule=Host:mailhog.${PROJECT_BASE_URL}'
#      - 'traefik.docker.network=traefik'
    networks:
      - nlc_cms

  # varnish:
  #   image: wodby/drupal-varnish:$VARNISH_TAG
  #   container_name: "${PROJECT_NAME}_varnish"
  #   depends_on:
  #     - nginx
  #   environment:
  #     VARNISH_SECRET: secret
  #     VARNISH_BACKEND_HOST: nginx
  #     VARNISH_BACKEND_PORT: 80
  #   labels:
  #     - 'traefik.backend=varnish'
  #     - 'traefik.port=6081'
  #     - 'traefik.frontend.rule=Host:varnish.${PROJECT_BASE_URL}'

  adminer:
    image: wodby/adminer:$ADMINER_TAG
    container_name: "${PROJECT_NAME}_adminer"
    environment:
      ADMINER_SALT: adminer-salt
    labels:
      - 'traefik.backend=adminer'
      - 'traefik.port=9000'
      - 'traefik.frontend.rule=Host:adminer.${PROJECT_BASE_URL}'
    networks:
      - nlc_cms

  # solr:
  #   image: wodby/drupal-solr:$SOLR_TAG
  #   container_name: "${PROJECT_NAME}_solr"
  #   environment:
  #     SOLR_HEAP: 1024m
  #   labels:
  #     - 'traefik.backend=solr'
  #     - 'traefik.port=8983'
  #     - 'traefik.frontend.rule=Host:solr.${PROJECT_BASE_URL}'

  elasticsearch:
    image: wodby/elasticsearch:$ELASTICSEARCH_TAG
    container_name: "${PROJECT_NAME}_elasticsearch"
    environment:
      ES_JAVA_OPTS: "-Xms500m -Xmx500m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    labels:
      - 'traefik.backend=${PROJECT_NAME}_elasticsearch'
      - 'traefik.port=9200'
      - 'traefik.frontend.rule=Host:elasticsearch.${PROJECT_BASE_URL}'
    networks:
      - nlc_cms

  # kibana:
  #   image: wodby/kibana:$KIBANA_TAG
  #   depends_on:
  #     - elasticsearch
  #   labels:
  #     - 'traefik.backend=kibana'
  #     - 'traefik.port=5601'
  #     - 'traefik.frontend.rule=Host:kibana.php.docker.localhost'

  portainer:
    image: portainer/portainer
    container_name: "${PROJECT_NAME}_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.backend=portainer'
      - 'traefik.port=9000'
      - 'traefik.frontend.rule=Host:portainer.${PROJECT_BASE_URL}'
    networks:
      - nlc_cms

  traefik:
    image: traefik:1.7.16-alpine
    container_name: "${PROJECT_NAME}_traefik"
    command: -c /dev/null --web --docker --logLevel=INFO
    ports:
      - '80:80'
      - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - nlc_cms

volumes:
  # Docker-sync for macOS users
  #  docker-sync:
  #    external: true
  project-db-data:
  graph-data:
  graph-logs:

networks:
#  traefik:
#    external: true
  nlc_cms:
  graph: