<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\profile\Entity\Profile;
use Drupal\search_api\Plugin\views\query\SearchApiQuery;
use Drupal\search_api\Query\ConditionGroupInterface;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_mail().
 */
function nlc_prototype_mail($key, &$message, $params) {
  switch ($key) {
    case 'directory_access_token':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('Access link: Senior Leader directory');
      $message['body'] = $params['message'];
      break;
  }
}

/**
 * Implements hook_form_alter() for the exposed views form.
 *
 * @param $form
 *   Form array.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Form state object.
 * @param $form_id
 *   Form ID.
 *
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function nlc_prototype_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form['#id'] == 'views-exposed-form-directory-page-1') {
    // Turn the the multi-select select box into a set of checkboxes.
    $form['sector']['#type'] = 'checkboxes';
  }
  elseif ($form['#id'] == 'views-exposed-form-directory-2-page-1') {
    // Turn the the multi-select select box into a set of checkboxes.
    dpm($form['job_title']);
    //      $form['job_title']['#type'] = 'checkboxes';
    $query = \Drupal::entityQuery('profile')
      ->condition('type', 'role')
      ->condition('status', 1)
      ->latestRevision();
    $pids = $query->execute();
    $profiles = Profile::loadMultiple($pids);

    $job_titles = [];
    foreach ($profiles as $profile) {
      /** @var \Drupal\Core\Field\FieldItemListInterface $job_title */
      $job_title = $profile->get('field_job_title');
      if (!$job_title->isEmpty() && !in_array($job_title->getString(), $job_titles)) {
        $job_titles[] = t($job_title->getString());
      }
    }
    //      dpm($job_titles);
  }
}

/**
 * Implements hook_views_query_alter().
 *
 * @param \Drupal\views\ViewExecutable $view
 *   The view object about to be processed.
 * @param QueryPluginBase $query
 *   The query plugin object for the query.
 */
function nlc_prototype_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  if ($view->id() == 'directory' && is_a($query, 'Drupal\search_api\Plugin\views\query\SearchApiQuery') && !empty($view->exposed_raw_input['sector'])) {
    /** @var ConditionGroupInterface $sectorConditionsGroup */
//    $sectorConditionsGroup = $query->createConditionGroup('OR');
    $sectorConditions = [];
    $sectorId = NULL;
    // Traverse through the 'where' part of the query.
    foreach ($query->getWhere() as &$condition_group) {
      foreach ($condition_group['conditions'] as $id => &$condition) {
        // If it's the 'sector' condition, turn it into a single value 'IN' a set query.
        if ($condition[0] === 'sector') {
          if (isset($sectorId)) {
            unset($condition_group['conditions'][$id]);
          }
          else {
            $sectorId = $id;
          }
          list($field, $value, $operator) = $condition;
          $sectorConditions[] = $value;
          $condition_group['conditions'][$sectorId][1] = $sectorConditions;
          $condition_group['conditions'][$sectorId][2] = 'IN';
        }
      }
    }
  }
}
